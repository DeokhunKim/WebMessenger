# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        env: 
            GITHUBSHA: ${GITHUB_SHA::7}
            TES: aaaa
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PEM }}
          script: |
            echo 1 ${{env.GITHUBSHA}}
            echo 2 ${GITHUB_SHA::7}
            echo 3 ${{ secrets.DOCKER_ID }}
            echo 4 ${{env.TES}}
            docker pull ${{ secrets.DOCKER_ID }}/webmessenger:${{env.GITHUBSHA}}
            docker tag ${{ secrets.DOCKER_ID }}/webmessenger:${{env.GITHUBSHA}} webmessenger
            docker stop webmessenger || true
            docker run -d --rm --name webmessenger --network kpp -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/chat?useSSL=false webmessenger
